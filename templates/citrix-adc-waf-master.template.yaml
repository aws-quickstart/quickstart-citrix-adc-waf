---
AWSTemplateFormatVersion: "2010-09-09"
Description:
  "This template deploys a VPC, with 3 subnets (Management, client, server) for 2 Availability Zones.
  It deploys an Internet Gateway, with a default  route on the public subnets.
  This template also creates a HA pair across Availability Zones with two instance of Citrix WAF:
  3 ENIs associated to 3 VPC subnets (Management, Client, Server) on primary and 3 ENIs associated
  to 3 VPC subnets (Management, Client, Server) on secondary.
  All the resource names created by this CFT will be prefixed with a tagName of the stackname
  **WARNING** This template creates AWS resources.
  You will be billed for the AWS resources used if you create a stack from this template."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - PrimaryAvailabilityZone
          - SecondaryAvailabilityZone
          - VPCCIDR
          - RestrictedWebAppCIDR
          - RestrictedSSHCIDR
          - PrimaryManagementPrivateSubnetCIDR
          - PrimaryClientPublicSubnetCIDR
          - PrimaryServerPrivateSubnetCIDR
          - SecondaryManagementPrivateSubnetCIDR
          - SecondaryClientPublicSubnetCIDR
          - SecondaryServerPrivateSubnetCIDR
          - PrimaryManagementPrivateIP
          - PrimaryClientPrivateIP
          - PrimaryServerPrivateIP
          - SecondaryManagementPrivateIP
          - SecondaryClientPrivateIP
          - SecondaryServerPrivateIP
          - VPCTenancy

      - Label:
          default: Bastion host configuration
        Parameters:
          - BastionRequired

      - Label:
          default: Citrix WAF configuration
        Parameters:
          - KeyPairName
          - CitrixADCInstanceType
          - CitrixADCIAMRole
          - ClientEIPRequired

      - Label:
          default: Pooled Licensing configuration
        Parameters:
          - PooledLicense

      - Label:
          default: Licence Server Details - (Select only when the PooledLicense is selected `Yes`)
        Parameters:
          - CitrixADCImageID
          - ADMIP
      - Label:
          default: License Details
        Parameters:
          - LicensingMode

      - Label:
          default: Pooled Licensing Details (Select only when the above Licensing Mode is "Pooled-Licensing")
        Parameters:
          - Bandwidth
          - PooledEdition

      - Label:
          default: CICO Licensing Details (Select only when the above Licensing Mode is "CICO-Licensing")
        Parameters:
          - Platform

      - Label:
          default: VCPU Licensing Details (Select only when the above Licensing Mode is "CPU-Licensing")
        Parameters:
          - VCPUEdition

      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix

    ParameterLabels:
      CitrixADCImageID:
        default: Citrix WAF AMI ID

      VPCCIDR:
        default: VPC CIDR

      PrimaryAvailabilityZone:
        default: Primary Availability Zone
      PrimaryManagementPrivateSubnetCIDR:
        default: Primary Management private subnet CIDR
      PrimaryClientPublicSubnetCIDR:
        default: Primary Client public subnet CIDR
      PrimaryServerPrivateSubnetCIDR:
        default: Primary Server private subnet CIDR

      SecondaryAvailabilityZone:
        default: Secondary Availability Zone
      SecondaryManagementPrivateSubnetCIDR:
        default: Secondary Management private subnet CIDR
      SecondaryClientPublicSubnetCIDR:
        default: Secondary Client public subnet CIDR
      SecondaryServerPrivateSubnetCIDR:
        default: Secondary Server private subnet CIDR

      PrimaryManagementPrivateIP:
        default: Primary Management private IP (NSIP)
      PrimaryClientPrivateIP:
        default: Primary Client private IP (VIP)
      PrimaryServerPrivateIP:
        default: Primary Server private IP (SNIP)
      SecondaryManagementPrivateIP:
        default: Secondary Management private IP (NSIP)
      SecondaryClientPrivateIP:
        default: Secondary Client private IP (VIP)
      SecondaryServerPrivateIP:
        default: Secondary Server private IP (SNIP)

      BastionRequired:
        default: Is bastion host required?

      VPCTenancy:
        default: VPC tenancy attribute
      RestrictedWebAppCIDR:
        default: Address range to access apps behind the ADCs (via VIP)
      RestrictedSSHCIDR:
        default: Address range to access Management interfaces
      KeyPairName:
        default: Key pair name
      CitrixADCInstanceType:
        default: Citrix WAF instance type
      CitrixADCIAMRole:
        default: Citrix WAF IAM role
      ClientEIPRequired:
        default: Should PublicIP(EIP) be assigned to Client side (VIP)?

      PooledLicense:
        default: Do you want to allocate license from ADM?
      ADMIP:
        default: Reachable ADM / ADM Agent IP
      LicensingMode:
        default: Licensing Mode
      Platform:
        default: Appliance Platform Type
      Bandwidth:
        default: License Bandwidth in Mbps
      PooledEdition:
        default: License Edition
      VCPUEdition:
        default: License Edition

      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix

Parameters:
  CitrixADCImageID:
    Type: String
    Default: ""
    Description: >-
      [Optional] If you are opting for pooled license below, enter latest BYOL AMI ID here, OR specify AMI ID of Citrix WAF to be provisioned. 
      If left empty, "Citrix Web App Firewall (WAF) - 200 Mbps Version 13.0-52.24 
      (https://aws.amazon.com/marketplace/pp/B08286P96W)" is provisioned by default.
  VPCCIDR:
    Description: The CIDR block for the VPC.
    Type: String
    Default: 10.0.0.0/16
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  VPCTenancy:
    Description: The allowed tenancy of instances launched into the VPC.
    Type: String
    Default: default
    AllowedValues:
      - default
      - dedicated
  PrimaryAvailabilityZone:
    Description: Availability Zone for Primary Citrix WAF deployment.
    Type: AWS::EC2::AvailabilityZone::Name
  SecondaryAvailabilityZone:
    Description: Availability Zone for Secondary Citrix WAF deployment.
    Type: AWS::EC2::AvailabilityZone::Name
  PrimaryManagementPrivateSubnetCIDR:
    Description: CIDR block for primary management private subnet located in the primary Availability Zone.
    Type: String
    Default: 10.0.1.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryClientPublicSubnetCIDR:
    Description: CIDR block for primary client public subnet located in the primary Availability Zone.
    Type: String
    Default: 10.0.2.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryServerPrivateSubnetCIDR:
    Description: CIDR block for primary server private subnet located in the primary Availability Zone.
    Type: String
    Default: 10.0.3.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryManagementPrivateSubnetCIDR:
    Description: CIDR block for secondary management private subnet located in the secondary Availability Zone.
    Type: String
    Default: 10.0.4.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryClientPublicSubnetCIDR:
    Description: CIDR block for secondary client public subnet located in the secondary Availability Zone.
    Type: String
    Default: 10.0.5.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryServerPrivateSubnetCIDR:
    Description: CIDR block for secondary server private subnet located in the secondary Availability Zone.
    Type: String
    Default: 10.0.6.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryManagementPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Primary Management ENI (last octet has to be between 5 and 254).
  PrimaryClientPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Primary Client ENI (last octet has to be between 5 and 254).
  PrimaryServerPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Primary Server ENI (last octet has to be between 5 and 254).
  SecondaryManagementPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Secondary Management ENI (last octet has to be between 5 and 254).
  SecondaryClientPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Secondary Client ENI (last octet has to be between 5 and 254).
  SecondaryServerPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [Optional] Leave empty for automatic assignment. Private IP assigned to the Secondary Server ENI (last octet has to be between 5 and 254).
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. This bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-), but should
      not start or end with a hyphen. You can specify your own bucket if you
      copy all of the assets and submodules into it, if you want to override the
      Quick Start behavior for your specific implementation.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*/$"
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: quickstart-citrix-adc-waf/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RestrictedWebAppCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    Description:
      "A CIDR block that is allowed to access the web apps behind WAF on tcp ports 80, 443.
      We recommend that you use a constrained CIDR range to
      reduce the potential of inbound attacks from unknown IP addresses."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  RestrictedSSHCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    Description:
      "A CIDR block that is allowed to access the bastion host(if present) or WAF management interface on port 22.
      We recommend that you use a constrained CIDR range to
      reduce the potential of inbound attacks from unknown IP addresses."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  KeyPairName:
    Description: EC2 key pair name to remotely access ADCs on port 22 (SSH).
    Type: AWS::EC2::KeyPair::KeyName
  CitrixADCInstanceType:
    Default: m4.xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
    Type: String
    Description:
      "Note: Please ensure that the instance type opted should align with the instance types
      available in the AWS marketplace for the region of deployment, else the CFT would fail."
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
  CitrixADCIAMRole:
    Description: "[OPTIONAL] If left empty, CFT will create required IAMRole"
    Type: String
    Default: ""

  PooledLicense:
    Description: Select 'Yes' to allocate license via ADM
    Type: String
    Default: "No"
    AllowedValues:
      - "No"
      - "Yes"

  LicensingMode:
    Description: "[OPTIONAL] Select the Licensing Mode"
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - "Pooled-Licensing"
      - "CICO-Licensing"
      - "CPU-Licensing"
  ADMIP:
    Description: "[OPTIONAL] Reachable ADM / ADM Agent IP"
    Type: String
    Default: ""
  Bandwidth:
    Description: >-
      Initial bandwidth of the license in Mbps to be allocated after BYOL ADCs are created. Should be multiple of 10 Mbps.
       Default is 0 Mbps
    Type: Number
    Default: 0
  PooledEdition:
    Description: "[OPTIONAL] License Edition for Pooled Capacity Licensing Mode"
    Type: String
    Default: Premium
    AllowedValues:
      - Premium
  VCPUEdition:
    Description: "[OPTIONAL] License Edition for vCPU Licensing Mode"
    Type: String
    Default: Premium
    AllowedValues:
      - Premium
  Platform:
    Description: "[OPTIONAL] License Platform"
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - VPX-200
      - VPX-1000
      - VPX-3000
      - VPX-5000
  BastionRequired:
    Type: String
    Default: "No"
    Description: Select "Yes" if required
    AllowedValues:
      - "No"
      - "Yes"

  ClientEIPRequired:
    Type: String
    Default: "No"
    Description: Select "Yes" if required. Otherwise, you can assign yourself after the deployment.
    AllowedValues:
      - "No"
      - "Yes"

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  UseBastion: !Equals [!Ref BastionRequired, "Yes"]
  UseClientEIP: !Equals [!Ref ClientEIPRequired, "Yes"]
  CreateIAMRole: !Equals [!Ref CitrixADCIAMRole, ""]

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
      - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
      - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        NumberOfAZs: "2"
        AvailabilityZones: !Join
          - ","
          - - !Ref PrimaryAvailabilityZone
            - !Ref SecondaryAvailabilityZone
        VPCCIDR: !Ref VPCCIDR
        PublicSubnet1CIDR: !Ref PrimaryClientPublicSubnetCIDR
        PublicSubnet2CIDR: !Ref SecondaryClientPublicSubnetCIDR
        CreatePrivateSubnets: "true"
        PrivateSubnet1ACIDR: !Ref PrimaryServerPrivateSubnetCIDR
        PrivateSubnet2ACIDR: !Ref SecondaryServerPrivateSubnetCIDR
        CreateAdditionalPrivateSubnets: "true"
        PrivateSubnet1BCIDR: !Ref PrimaryManagementPrivateSubnetCIDR
        PrivateSubnet2BCIDR: !Ref SecondaryManagementPrivateSubnetCIDR
        VPCTenancy: !Ref VPCTenancy

  DeleteServersideNATGWSRoutetack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
      - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/update-serverside-route-table.template.yaml
      - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PrimaryPrivateServerSubnetRouteTableID: !GetAtt VPCStack.Outputs.PrivateSubnet1ARouteTable
        SecondaryPrivateServerSubnetRouteTableID: !GetAtt VPCStack.Outputs.PrivateSubnet2ARouteTable

  BastionStack:
    Condition: UseBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
      - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
      - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        BastionAMIOS: Ubuntu-Server-16.04-LTS-HVM
        KeyPairName: !Ref KeyPairName
        NumBastionHosts: "1"
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3BucketRegion: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}submodules/quickstart-linux-bastion/
        RemoteAccessCIDR: !Ref RestrictedSSHCIDR
        VPCID: !GetAtt VPCStack.Outputs.VPCID

  WorkLoadStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
      - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/citrix-adc-waf-workload.template.yaml
      - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        VPCTenancy: !Ref VPCTenancy
        RestrictedSSHCIDR: !Ref RestrictedSSHCIDR
        RestrictedWebAppCIDR: !Ref RestrictedWebAppCIDR
        PrimaryManagementPrivateSubnetID: !GetAtt VPCStack.Outputs.PrivateSubnet1BID
        PrimaryClientPublicSubnetID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PrimaryServerPrivateSubnetID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        SecondaryManagementPrivateSubnetID: !GetAtt VPCStack.Outputs.PrivateSubnet2BID
        SecondaryClientPublicSubnetID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        SecondaryServerPrivateSubnetID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrimaryManagementPrivateIP: !Ref PrimaryManagementPrivateIP
        PrimaryClientPrivateIP: !Ref PrimaryClientPrivateIP
        PrimaryServerPrivateIP: !Ref PrimaryServerPrivateIP
        SecondaryManagementPrivateIP: !Ref SecondaryManagementPrivateIP
        SecondaryClientPrivateIP: !Ref SecondaryClientPrivateIP
        SecondaryServerPrivateIP: !Ref SecondaryServerPrivateIP
        BastionSecurityGroupID: !If
          - UseBastion
          - !GetAtt BastionStack.Outputs.BastionSecurityGroupID
          - ""
        CitrixADCImageID: !Ref CitrixADCImageID
        KeyPairName: !Ref KeyPairName
        CitrixADCIAMRole: !Ref CitrixADCIAMRole
        ClientEIPRequired: !Ref ClientEIPRequired
        CitrixADCInstanceType: !Ref CitrixADCInstanceType
        PooledLicense: !Ref PooledLicense
        ADMIP: !Ref ADMIP
        LicensingMode: !Ref LicensingMode
        Bandwidth: !Ref Bandwidth
        PooledEdition: !Ref PooledEdition
        Platform: !Ref Platform
        VCPUEdition: !Ref VCPUEdition
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3BucketRegion: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

Outputs:
  VPCID:
    Description: VPC ID
    Value: !GetAtt VPCStack.Outputs.VPCID
  PrimaryManagementPrivateSubnetID:
    Description: Primary Management private subnet ID
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet1BID
  PrimaryClientPublicSubnetID:
    Description: Primary Client public subnet ID
    Value: !GetAtt VPCStack.Outputs.PublicSubnet1ID
  PrimaryServerPrivateSubnetID:
    Description: Primary Server private subnet ID
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
  SecondaryManagementPrivateSubnetID:
    Description: Secondary Management private subnet ID
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet2BID
  SecondaryClientPublicSubnetID:
    Description: Secondary Client public subnet ID
    Value: !GetAtt VPCStack.Outputs.PublicSubnet2ID
  SecondaryServerPrivateSubnetID:
    Description: Secondary Server private subnet ID
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
  ManagementSecurityGroupID:
    Description: Security group ID for management WAF ENIs
    Value: !GetAtt WorkLoadStack.Outputs.ManagementSecurityGroupID
  ClientSecurityGroupID:
    Description: Security group ID for client WAF ENIs
    Value: !GetAtt WorkLoadStack.Outputs.ClientSecurityGroupID
  ServerSecurityGroupID:
    Description: Security group ID for server WAF ENIs
    Value: !GetAtt WorkLoadStack.Outputs.ServerSecurityGroupID
  InstanceProfileName:
    Condition: CreateIAMRole
    Description: Instance profile for ADCs
    Value: !GetAtt WorkLoadStack.Outputs.InstanceProfileName
  PrimaryADCInstanceID:
    Description: Primary WAF instance ID
    Value: !GetAtt WorkLoadStack.Outputs.PrimaryADCInstanceID
  PrimaryManagementPrivateNSIP:
    Description: Primary Management private NSIP
    Value: !GetAtt WorkLoadStack.Outputs.PrimaryManagementPrivateNSIP
  PrimaryClientPublicEIP:
    Condition: UseClientEIP
    Description: Primary Client public EIP
    Value: !GetAtt WorkLoadStack.Outputs.PrimaryClientPublicEIP
  PrimaryClientPrivateVIP:
    Description: Primary Client private VIP
    Value: !GetAtt WorkLoadStack.Outputs.PrimaryClientPrivateVIP
  SecondaryADCInstanceID:
    Description: Secondary WAF instance ID
    Value: !GetAtt WorkLoadStack.Outputs.SecondaryADCInstanceID
  SecondaryManagementPrivateNSIP:
    Description: Secondary Management private NSIP
    Value: !GetAtt WorkLoadStack.Outputs.SecondaryManagementPrivateNSIP
  SecondaryClientPrivateVIP:
    Description: Secondary Client private VIP
    Value: !GetAtt WorkLoadStack.Outputs.SecondaryClientPrivateVIP
  LinuxBastionHostEIP1:
    Condition: UseBastion
    Description: Elastic IP address for bastion host 1
    Value: !GetAtt BastionStack.Outputs.EIP1
#  LinuxBastionHostEIP2:
#    Condition: 2BastionCondition
#    Description: Elastic IP address for bastion host 2
#    Value: !GetAtt BastionStack.Outputs.EIP2
